{"version":3,"sources":["actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/AppNavBar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/ErrorPage.js","components/actors/AddActor.js","components/movies/AddMovie.js","components/actors/ListActors.js","components/movies/ListMovies.js","components/profiles/Profile.js","components/movies/Category.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","async","localStorage","console","log","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLink","Nav","className","Link","activeStyle","color","as","NavLink","exact","to","Item","onClick","href","guestLinks","Navbar","bg","expand","Brand","Form","inline","FormControl","placeholder","Button","variant","Toggle","aria-controls","Collapse","Landing","Image","src","roundedCircle","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","login","required","minLength","ErrorPage","AddActor","props","handleChange","event","setState","addNewActors","Axios","from","age","Authorization","then","alert","history","push","catch","finally","this","Container","Row","Col","sm","addNewProduct","Group","Label","Control","Component","AddMovie","addNewMovies","year","genre","ListActors","componentDidMount","actors","isLoading","CardColumns","map","actor","index","Card","key","style","width","margin","Img","image","Body","Title","ListGroup","ListGroupItem","ListMovies","movies","movie","Profile","Category","Carousel","alt","Caption","Routes","path","component","Register","Login","private","NotFound","React","initialState","getItem","user","profile","profiles","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","useEffect","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39f699d1.chunk.js","sourcesContent":["import uuid from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = uuid.v4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id }\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE\n} from './types';\n\nimport setAuthToken from '../utils/setAuthToken';\n//Load user\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n\n    try {\n      console.log('test');\n      const res = await axios.get('/login');\n      console.log(res);\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  } else {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n//Register user\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n//Login user\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/login', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n//LOGOUT - Clear profile\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n","import { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\nimport React, { Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nexport const AppNavBar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLink = (\n    <Nav className=\"ml-auto\">\n      <Nav.Link\n        activeStyle={{ color: '#ED5035' }}\n        as={NavLink}\n        exact\n        to=\"/actors/add\"\n      >\n        Add New Actor\n      </Nav.Link>\n      <Nav.Link\n        activeStyle={{ color: '#ED5035' }}\n        as={NavLink}\n        exact\n        to=\"/movies/add\"\n      >\n        Add New Movie\n      </Nav.Link>\n      <Nav.Item>\n        <Nav.Link to=\"/profiles\" exact as={NavLink}>\n          Profile\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link onClick={logout} href=\"#!\">\n          Logout\n        </Nav.Link>\n      </Nav.Item>\n    </Nav>\n  );\n\n  const guestLinks = (\n    <Nav className=\"ml-auto\">\n      <Nav.Item>\n        <Nav.Link to=\"/register\" exact as={NavLink}>\n          Register\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link to=\"/login\" exact as={NavLink}>\n          Login\n        </Nav.Link>\n      </Nav.Item>\n    </Nav>\n  );\n\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Nav>\n        <Navbar.Brand to=\"/\" exact as={NavLink}>\n          Movies.ba\n        </Navbar.Brand>\n        <Nav.Item>\n          {' '}\n          <Nav.Link to=\"/\" exact as={NavLink}>\n            Home\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          {' '}\n          <Nav.Link to=\"/movies\" exact as={NavLink}>\n            Movies\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          {' '}\n          <Nav.Link to=\"/category\" exact as={NavLink}>\n            Category\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          {' '}\n          <Nav.Link to=\"/actors\" exact as={NavLink}>\n            Actors\n          </Nav.Link>\n        </Nav.Item>\n      </Nav>\n      <Nav>\n        <Nav.Item>\n          <Form inline className=\"justify-content-center\">\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"ml-sm-2\" />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form>\n        </Nav.Item>\n      </Nav>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        {!loading && (\n          <Fragment>{isAuthenticated ? authLink : guestLinks}</Fragment>\n        )}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nAppNavBar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logout })(AppNavBar);\n","import React from 'react';\nimport Image from 'react-bootstrap/Image';\n\nconst Landing = () => {\n  return (\n    <Image src=\"https://cdn.hipwallpaper.com/i/5/97/fcIupN.jpg\" roundedCircle />\n  );\n};\n\nexport default Landing;\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/profiles\" />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Sign Up</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Create Your Account\n      </p>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            value={name}\n            onChange={e => onChange(e)}\n            //required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={e => onChange(e)}\n            //required\n          />\n          <small className=\"form-text\"></small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={e => onChange(e)}\n            //minLength='5'\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            value={password2}\n            onChange={e => onChange(e)}\n            //minLength='5'\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  //Redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Sign In</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Sign Into Your Account\n      </p>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={e => onChange(e)}\n            minLength=\"5\"\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n      </form>\n      <p className=\"my-1\">\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nconst ErrorPage = () => {\n  return (\n    <div id='notfound'>\n      <div className='notfound'>\n        <div className='notfound-404'>\n          <h1>Oops!</h1>\n          <h2>404 - The Page cannot be found</h2>\n        </div>\n        <a>\n          <NavLink to='/'>Go to Home</NavLink>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React, { Component } from 'react';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\n\nimport Axios from 'axios';\n\nclass AddActor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      from: '',\n      age: ''\n    };\n  }\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  addNewActors = event => {\n    event.preventDefault();\n    Axios.post(\n      '/actor',\n      { name: this.state.name, from: this.state.from, age: this.state.age },\n      { headers: { Authorization: 'myJwtToken' } }\n    )\n      .then(response => {\n        console.log('Actor successfully added.');\n        alert('Actor successfully added.');\n        this.props.history.push('/actors');\n      })\n      .catch(error => {\n        console.log(error.response);\n      })\n      .finally(() => {\n        console.log('Request completed.');\n      });\n  };\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col sm={6}>\n              <Form onSubmit={this.addNewProduct}>\n                <Form.Group>\n                  <Form.Label>Name:</Form.Label>\n                  <Form.Control\n                    name=\"name\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"Enter actor name\"\n                  />\n                </Form.Group>\n\n                <Form.Group>\n                  <Form.Label>From:</Form.Label>\n                  <Form.Control\n                    name=\"from\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"Where is this actor from?\"\n                  />\n                </Form.Group>\n\n                <Form.Group>\n                  <Form.Label>Age:</Form.Label>\n                  <Form.Control\n                    name=\"age\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"Enter actor age\"\n                  />\n                </Form.Group>\n\n                <Button\n                  variant=\"success\"\n                  type=\"submit\"\n                  onClick={this.addNewActors}\n                >\n                  Submit\n                </Button>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default AddActor;\n","import React, { Component } from 'react';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\n\nimport Axios from 'axios';\n\nclass AddMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      year: '',\n      genre: ''\n    };\n  }\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  addNewMovies = event => {\n    event.preventDefault();\n    Axios.post(\n      '/movies',\n      { name: this.state.name, year: this.state.year, genre: this.state.genre },\n      { headers: { Authorization: 'myJwtToken' } }\n    )\n      .then(response => {\n        console.log('Movie successfully added.');\n        alert('Movie successfully added.');\n        this.props.history.push('/movies');\n      })\n      .catch(error => {\n        console.log(error.response);\n      })\n      .finally(() => {\n        console.log('Request completed.');\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col sm={6}>\n              <Form onSubmit={this.addNewProduct}>\n                <Form.Group>\n                  <Form.Label>Name:</Form.Label>\n                  <Form.Control\n                    name=\"name\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"Enter movie name\"\n                  />\n                </Form.Group>\n\n                <Form.Group>\n                  <Form.Label>Year:</Form.Label>\n                  <Form.Control\n                    name=\"year\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"Enter movie year\"\n                  />\n                </Form.Group>\n\n                <Form.Group>\n                  <Form.Label>Genre:</Form.Label>\n                  <Form.Control\n                    name=\"genre\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"Enter movie genre\"\n                  />\n                </Form.Group>\n\n                <Button\n                  variant=\"success\"\n                  type=\"submit\"\n                  onClick={this.addNewMovies}\n                >\n                  Submit\n                </Button>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default AddMovie;\n","import React, { Component } from 'react';\n\n/* Asynchronous HTTP library */\nimport Axios from 'axios';\nimport {\n  ListGroup,\n  Card,\n  ListGroupItem,\n  CardColumns,\n  Button\n} from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass ListActors extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      actors: [],\n      isLoading: true\n    };\n  }\n\n  /* Use the lifecycle method to fetch relevant data */\n  componentDidMount = () => {\n    Axios.get('/actor')\n      .then(response => {\n        /* Use response.data to access the actual data */\n        this.setState({\n          actors: response.data\n        });\n      })\n      .catch(error => {\n        /* Use error to get the error message, or error.response(.data) to get all data returned with the error. */\n        console.log(error.response);\n      })\n      .finally(() => {\n        /* finally() executes at the end of the request, regardless if it succeeded or not */\n        console.log('actors been retrieved.');\n        this.setState({\n          isLoading: false\n        });\n      });\n  };\n\n  render() {\n    const { actors } = this.state;\n    return (\n      <div>\n        <h2>Actor list</h2>\n        {\n          <div>\n            {\n              <CardColumns>\n                {actors.map((actor, index) => (\n                  <Card key={index} style={{ width: '18rem', margin: '1rem' }}>\n                    <Card.Img variant=\"top\" src={actor.image} />\n                    <Card.Body>\n                      <Card.Title>{actor.name}</Card.Title>\n                    </Card.Body>\n                    <ListGroup className=\"list-group-flush\">\n                      <ListGroupItem>\n                        <b>Age: </b>\n                        {actor.age}\n                      </ListGroupItem>\n                      <ListGroupItem>\n                        <b>From: </b>\n                        {actor.from}\n                      </ListGroupItem>\n                    </ListGroup>\n                  </Card>\n                ))}\n              </CardColumns>\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default ListActors;\n","import React, { Component } from 'react';\n\n/* Asynchronous HTTP library */\nimport Axios from 'axios';\nimport { ListGroup, Card, ListGroupItem, CardColumns } from 'react-bootstrap';\n\nclass ListMovies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movies: [],\n      isLoading: true\n    };\n  }\n\n  /* Use the lifecycle method to fetch relevant data */\n  componentDidMount = () => {\n    Axios.get('/movies')\n      .then(response => {\n        /* Use response.data to access the actual data */\n        this.setState({\n          movies: response.data\n        });\n      })\n      .catch(error => {\n        /* Use error to get the error message, or error.response(.data) to get all data returned with the error. */\n        console.log(error.response);\n      })\n      .finally(() => {\n        /* finally() executes at the end of the request, regardless if it succeeded or not */\n        console.log('movies been retrieved.');\n        this.setState({\n          isLoading: false\n        });\n      });\n  };\n\n  render() {\n    const { movies } = this.state;\n    console.log(this.props);\n    return (\n      <div>\n        <h2>Movie list</h2>\n        {\n          <div>\n            {\n              <CardColumns>\n                {movies.map((movie, index) => {\n                  return (\n                    <Card\n                      key={index}\n                      style={{ width: '18rem', margin: '1rem' }}\n                    >\n                      <Card.Img variant=\"top\" src={movie.image} />\n                      <Card.Body>\n                        <Card.Title>{movie.name}</Card.Title>\n                      </Card.Body>\n                      <ListGroup className=\"list-group-flush\">\n                        <ListGroupItem>\n                          <b>Year: </b>\n                          {movie.year}\n                        </ListGroupItem>\n                        <ListGroupItem>\n                          <b>Genre: </b>\n                          {movie.genre}\n                        </ListGroupItem>\n                      </ListGroup>\n                    </Card>\n                  );\n                })}\n              </CardColumns>\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default ListMovies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Profile(props) {\n  return <div>Profile</div>;\n}\n\nProfile.propTypes = {};\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\n\nclass Category extends Component {\n  render() {\n    return (\n      <Carousel>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src=\"https://hips.hearstapps.com/pop.h-cdn.co/assets/15/14/2560x1280/landscape-1428004383-blade-runner.jpg?resize=480:*\"\n            alt=\"First slide\"\n          />\n          <Carousel.Caption>\n            <h3>Sciene Fiction movies</h3>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src=\"https://www.nairaland.com/attachments/5886491_filmgenreconventions2638_jpegd06dfcd56feea05219afdad43d803bb9\"\n            alt=\"Third slide\"\n          />\n\n          <Carousel.Caption>\n            <h3>Action movies</h3>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src=\"https://static.kupindoslike.com/DOMACI-FILMOVI-Kolekcija-od-6-originalnih-DVD-filmova_slika_O_31974345.jpg\"\n            alt=\"Third slide\"\n          />\n\n          <Carousel.Caption>\n            <h3>Domaci movies</h3>\n          </Carousel.Caption>\n        </Carousel.Item>\n      </Carousel>\n    );\n  }\n}\n\nexport default () => (\n  <div>\n    <Category />\n  </div>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport Register from '../auth/Register';\nimport Login from '../auth/Login';\nimport NotFound from '../layout/ErrorPage';\nimport AddActor from '../actors/AddActor';\nimport AddMovie from '../movies/AddMovie';\nimport ListActors from '../actors/ListActors';\nimport ListMovies from '../movies/ListMovies';\nimport Profile from '../profiles/Profile';\nimport Category from '../movies/Category';\n\nclass Routes extends React.Component {\n  render() {\n    console.log(this.props);\n    const { isAuthenticated } = this.props;\n    return (\n      <section className=\"container\">\n        <Switch>\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/category\" component={Category} />\n          <Route exact path=\"/login\" component={Login} />\n          {isAuthenticated && (\n            <Route private path=\"/actors/add\" component={AddActor} />\n          )}\n          <Route exact path=\"/actors\" component={ListActors} />\n          {isAuthenticated && (\n            <Route private path=\"/movies/add\" component={AddMovie} />\n          )}\n          <Route exact path=\"/movies\" component={ListMovies} />\n          {isAuthenticated && (\n            <Route private path=\"/profiles\" component={Profile} />\n          )}\n          {isAuthenticated && (\n            <Route private path=\"/movies/add\" component={AddMovie} />\n          )}\n          <Route component={NotFound} />\n        </Switch>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Routes);\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  GET_PROFILES\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/AppNavBar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}